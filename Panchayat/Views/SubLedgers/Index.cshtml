@model PagedList.IPagedList<Panchayat.SubLedger>
@using PagedList.Mvc;

@{
    ViewBag.Title = Panchayat.MyExtensions.GetTitle(GetType().Name);
}

<h2>@ViewBag.Title</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
@using (Html.BeginForm("Index", "SubLedgers", FormMethod.Get))
{
    <p>
        Find by Ledger: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        &nbsp; :Find by SubLedger: @Html.TextBox("subSearchString", ViewBag.CurrentFilter as string)
        &nbsp; :Ledger Type: @Html.DropDownList("SubType","--All Ledger types--")
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            SubLedger
        </th>
        <th>
            Ledger
        </th>
        <th>
            SubLedger Type
        </th>
        <th>
            Has Demand?
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Ledger)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Ledger1.Ledger1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SubLedgerType.SubLedgerType1)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HasDemand)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.SubLedgerID }) |
            @Html.ActionLink("Details", "Details", new { id=item.SubLedgerID }) 
            
        </td>
    </tr>
}

</table>
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, SubLedgerID = ViewBag.SubLedgerID }))