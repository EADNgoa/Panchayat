@model Panchayat.VPRentDetail

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
<div class="alert alert-danger">
    @if ((bool)ViewBag.isRVtoday)
    {
        @: <strong>Note!</strong> Please remember to Correct the corresponding receipt <a target="_blank" href="/Form4/Edit/@Model.ReceiptNo">here</a>
    }
    else
    {
        @: <strong>Note!</strong> Please remember to make a correction entry <a target="_blank" href="/Corrections/Create?RecieptNo=@Model.ReceiptNo">here</a>
    }
</div>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>VPRent</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VPRentID)
        @Html.HiddenFor(model => model.Month)
        @Html.HiddenFor(model => model.ReceiptNo)

        <div class="form-group">
            @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @MyExtensions.MonthFromInt(Model.Month)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Arrears, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Arrears, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Arrears, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Current, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Current, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Current, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecoveryAmt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecoveryAmt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RecoveryAmt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecoveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecoveryDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.RecoveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BalanceArrears, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BalanceArrears, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BalanceArrears, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BalanceCurrent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BalanceCurrent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BalanceCurrent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
