@model Panchayat.Work

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Work</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.WorksID)
        @Html.HiddenFor(model => model.EMDIOrecptID)
        @Html.HiddenFor(model => model.SDIOrecptID)

        <div class="form-group">
            @Html.LabelFor(model => model.NameOfWork, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NameOfWork, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NameOfWork, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TechSanctionNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TechSanctionNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TechSanctionNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ContractorName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ContractorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ContractorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PercentageAccepted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PercentageAccepted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PercentageAccepted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EMDIOrecptID, "EMD Deposit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.EMDIOrecptID == null)
                {
                    @Html.ActionLink("Add EMD", "CreateAquisition", "SD9EMD6", new { rt = 24, wrk = Model.WorksID },null)
                }
                else
                {
                    @Html.ActionLink("Edit EMD", "EditAquisition", "SD9EMD6", new { id = Model.EMDIOrecptID, wrk = Model.WorksID }, null)
                }
                @Html.ValidationMessageFor(model => model.EMDIOrecptID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SDIOrecptID, "Security Deposit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.SDIOrecptID == null)
                {
                    @Html.ActionLink("Add Security Deposit", "CreateAquisition", "SD9EMD6", new { rt = 23, wrk = Model.WorksID }, null)
                }
                else
                {
                    @Html.ActionLink("Edit Security Deposit", "EditAquisition", "SD9EMD6", new { id = Model.SDIOrecptID, wrk = Model.WorksID }, null)
                }
                @Html.ValidationMessageFor(model => model.SDIOrecptID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ITrecptNo, "Income Tax Deposit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.ITrecptNo == null)
                {
                    @Html.ActionLink("Add IT Deposit", "Create", "Form4", new { sl = 27, wrk = Model.WorksID }, null)
                }
                else
                {
                    if (Model.Form4.PayDate == DateTime.Today)
                    {
                        <a target="_blank" href="/Form4/Edit/@Model.ITrecptNo">Edit</a>
                    }
                    else
                    {
                        <a target="_blank" href="/Corrections/Create?ReceiptID=@Model.ITrecptNo">Create Correction Entry</a>
                    }                    
                }
                @Html.ValidationMessageFor(model => model.ITrecptNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoyaltyDeposit, "Royalty Deposit", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Model.RoyaltyDeposit== null)
                {
                    @Html.ActionLink("Add Royalty Deposit", "Create", "Form4", new { sl = 28, wrk = Model.WorksID }, null)
                }
                else
                {
                    if (Model.Form41.PayDate == DateTime.Today)
                    {
                        <a target="_blank" href="/Form4/Edit/@Model.RoyaltyDeposit">Edit</a>
                    }
                    else
                    {
                        <a target="_blank" href="/Corrections/Create?ReceiptID=@Model.RoyaltyDeposit">Create Correction Entry</a>
                    }
                }
                @Html.ValidationMessageFor(model => model.RoyaltyDeposit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeLimit, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeLimit, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeLimit, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExtentionTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExtentionTime, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExtentionTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EstimatedCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EstimatedCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EstimatedCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenderedCost, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenderedCost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenderedCost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinalValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinalValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FinalValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NetPaymentToContractor, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NetPaymentToContractor, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NetPaymentToContractor, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            SD Refund
            <div class="col-md-10">
                @ViewBag.SDrefund                
            </div>
        </div>

        <div class="form-group">
            EMD Refund
            <div class="col-md-10">
                @ViewBag.EMDrefund                
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CommenceDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CommenceDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommenceDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompletionDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompletionDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompletionDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrantsRecieved, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrantsRecieved, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrantsRecieved, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GrantsUtilized, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GrantsUtilized, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GrantsUtilized, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MBNo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MBNo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MBNo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
