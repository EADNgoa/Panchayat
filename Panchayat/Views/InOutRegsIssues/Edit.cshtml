@model Panchayat.InOutRegsIssue

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.RegisterTypeID )
    @Html.HiddenFor(model => model.TDate)
    @Html.HiddenFor(model => model.Balance)
    @Html.HiddenFor(model => model.RVno)
    @Html.HiddenFor(model => model.IOissueID)    
    @Html.Hidden("OldQty", (int)ViewBag.OldQty);    
    
    <div class="form-horizontal">
        @if (ViewBag.RegisterTypeID == 17)
        {
            <h4>Stationary</h4>
        }
        @if (ViewBag.RegisterTypeID == 18)
        {
            <h4>Stamp</h4>
        }
        @if (ViewBag.RegisterTypeID == 19)
        {
            <h4>DeadStock</h4>
        }
        @if (ViewBag.RegisterTypeID == 20)
        {
            <h4>Street Light Articles</h4>
        }
        @if (ViewBag.RegisterTypeID == 21)
        {
            <h4>Grants</h4>
        }
        <hr />


   


        <div class="form-group">            
            @if (ViewBag.RegisterTypeID == 21)
            {
                <label class="control-label col-md-2">Date</label>
            }
            else
            {
                <label class="control-label col-md-2">Date</label>
            }
            <div class="col-md-10">
                @Html.DisplayFor(model => model.TDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @if (ViewBag.RegisterTypeID == 21)
            {
                @Html.Hidden("ItemID", 4)
            }
            else
            {
                        <label class="control-label col-md-2">Item</label>
                        <div class="col-md-10">
                            @Html.DisplayFor(model => model.InvItem.Item, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ItemID, "", new { @class = "text-danger" })
                        </div>
            }
        </div>

        <div class="form-group">
            @if (ViewBag.RegisterTypeID == 21)
            {
                <label class="control-label col-md-2">Period Within Which To Be Spent</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", @type = "date", min = 0 } })
                    @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                </div>
            }
            else
            {
                <label class="control-label col-md-2">Quantity</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Qty, new { htmlAttributes = new { @class = "form-control", min = 0 } })
                    @Html.ValidationMessageFor(model => model.Qty, "", new { @class = "text-danger" })
                </div>
            }
        </div>

            @if (ViewBag.RegisterTypeID == 21)
            {
                <div class="form-group">
                        <label class="control-label col-md-2">Amount</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
        <div class="form-group">
            <label class="control-label col-md-2">Issued To</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.IssuedTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IssuedTo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remarks, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remarks, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RVno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.RVno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RVno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { rt = Model.RegisterTypeID})
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
