@model PagedList.IPagedList<Panchayat.rpt1to1io>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Form 9";
}



<style type="text/css">
    table {
        page-break-inside: auto
    }

    tr {
        page-break-inside: avoid;
        page-break-after: auto
    }

    .table > thead > tr > th {
        vertical-align: top;
    }

    thead {
        display: table-header-group
    }

    tfoot {
        display: table-footer-group
    }
</style>
<center>
    <h2 class="section-to-print"><b>Form No. 9</b></h2>
    <h4>See Rule 20(vii)</h4>
    <h3>Register for conditional grants sanctioned during the year</h3>
@using (Html.BeginForm("Index", "SD9EMD6", FormMethod.Get))
{
    @Html.Hidden("rt", (int)ViewBag.RegisterTypeID)
    <div class="row section-to-Not-print">
        <div>
            <table>
                <tr style="text-align:center">
                    <td></td>
                    <td>&nbsp; Year:</td>
                    <td>@Html.DropDownList("yr", (IEnumerable<SelectListItem>)ViewBag.YearBox, htmlAttributes: new { @class = "form-control input-sm" })</td>

                    <td>&nbsp; Purpose:</td>
                    <td> @Html.TextBox("PropName", ViewBag.CurrentFilter as string, new { @class = "form-control" })</td>

                    <td class="col-lg-1"></td>
                    <td><input type="submit" value="Search" class="btn btn-default" /></td>
                </tr>
            </table>
        </div>
    </div>
}
</center>
<p class="section-to-Not-print">&nbsp;</p>
<p class="section-to-Not-print">
    <input type="button" onclick="javascript:window.print();" value="Print" class="eabutton section-to-not-print" />
    @Html.ActionLink("New Grant", "CreateAquisition", new { rt=(int) ViewBag.RegisterTypeID })
    
</p>
<table class="table section-to-print">
    <thead>
        <tr  style="border: solid thin">
            <th rowspan="2">
                Sr No.
            </th>
            <th rowspan="2">
                Date of the sanction
            </th>
            <th rowspan="2">
                By whom sanctioned
            </th>
            <th  rowspan="2">
                Purpose for which given
            </th>
            <th rowspan="2">
                Period within which to be spent
            </th>
            <th rowspan="2">
                Amount of the grant
            </th>
            <th rowspan="2">                
                No & date of Treasure voucher on which the amount is drawn
            </th>
            <th rowspan="2"> &nbsp;</throwspan="2">
            <th colspan="3" style="text-align: center">
                Amount spent by Village Panchayat
            </th>
            <th rowspan="2">
                Remark
            </th>
            <th rowspan="2">
                &nbsp;
            </th>
        </tr>
        <tr  style="border: solid thin">
            
            <th>
                No. & Date of Voucher
            </th>
            <th>
                Amount Drawn
            </th>
            <th>
                Balance after each Transaction
            </th>
        </tr>
        <tr>           
            <th>1</th>
            <th>2</th>
            <th>3</th>
            <th>4</th>
            <th>5</th>
            <th>6</th>
            <th>7</th>
            <th>&nbsp;</th>
            <th>8</th>
            <th>9</th>            
            <th>10</th>
            <th>11</th>
            <th>&nbsp;</th>
        </tr>
    </thead>
    <tbody>
        
        @foreach (rpt1to1io item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.IORecptID)</td>
                <td>@Html.DisplayFor(modelItem => item.TDate)</td>
                <td>@Html.DisplayFor(modelItem => item.SanctionByWhom)</td>
                <td>@Html.DisplayFor(modelItem => item.DepositPurpose)</td>
                <td>@Html.DisplayFor(modelItem => item.PeriodToSpendYrs)</td>
                <td>@Html.DisplayFor(modelItem => item.Value)</td>
                <td>@Html.DisplayFor(modelItem => item.TreasureVoucherDetails)</td>
                <td>
                    <div class="section-to-Not-print">
                        @Html.ActionLink("Edit", "EditAquisition", new { id = item.IORecptID })
                        @Html.ActionLink("Spend", "CreateDisposal", new { rt = (int)ViewBag.RegisterTypeID, IORecptID = item.IORecptID })
                    </div>
                </td>
                @if (item.IssuesDets?.Count>0)
                {

                    var i1Det = item.IssuesDets[0];
                        <td>@Html.DisplayFor(i => i1Det.RVno) , @Html.DisplayFor(i => i1Det.TDate)</td>
                        <td>@Html.DisplayFor(i => i1Det.Value)</td>
                        <td>@Html.DisplayFor(i => i1Det.Balance)</td>
                        <td>@Html.DisplayFor(i => i1Det.Remarks)</td>
                        <td><div class="section-to-Not-print">@Html.ActionLink("Edit", "EditDisposal", new { id = i1Det.IOissueID }) </div></td>
                }
            </tr>


                for(int j = 1; j < item.IssuesDets.Count; j++)
                {
                        
                        <tr>
                        <td colspan="8">&nbsp;</td>
                        <td>@Html.DisplayFor(i => item.IssuesDets[j].RVno) , @Html.DisplayFor(i => item.IssuesDets[0].TDate)</td>
                        <td>@Html.DisplayFor(i => item.IssuesDets[j].Value)</td>
                        <td>@Html.DisplayFor(i => item.IssuesDets[j].Balance)</td>                        
                        <td>@Html.DisplayFor(i => item.IssuesDets[j].Remarks)</td>                 
                        <td><div class="section-to-Not-print">@Html.ActionLink("Edit", "EditDisposal", new { id = item.IssuesDets[j].IOissueID }) </div> </td>                    
                        </tr>
                }
            
        }
    </tbody>
</table>


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount


@Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter, rt = ViewBag.RegisterTypeID }))